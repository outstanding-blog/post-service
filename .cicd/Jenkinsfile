pipeline {

    options {
        ansiColor('xterm')
    }
    
    agent {
        kubernetes {
            defaultContainer 'maven'
            yaml '''
                apiVersion: v1
                kind: Pod
                spec:
                  containers:
                  - name: maven
                    image: maven:3.8.4-openjdk-17
                    imagePullPolicy: IfNotPresent
                    command:
                    - sleep
                    args:
                    - '30d'
                    volumeMounts:
                    - name: m2-persistent-storage
                      mountPath: /root/.m2
                  - name: docker
                    image: docker:latest
                    imagePullPolicy: IfNotPresent
                    command:
                    - cat
                    tty: true
                    volumeMounts:
                    - mountPath: /var/run/docker.sock
                      name: docker-sock
                  - name: git
                    image: alpine/git:latest
                    imagePullPolicy: IfNotPresent
                    command:
                    - sleep
                    args:
                    - '30d'
                  restartPolicy: Never
                  volumes:
                    - name: m2-persistent-storage
                      persistentVolumeClaim:
                        claimName: maven
                    - name: docker-sock
                      hostPath:
                        path: /var/run/docker.sock
                '''
        }
    }

    stages {
        stage('Prepare') {
            steps {
                sh 'pwd'
                sh 'ls -al'
                sh 'mvn -version'
                sh 'rm -rf ./target'
                sh 'mvn clean'
            }
        }

        stage('Unit Test & Integration Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package -Dmaven.test.skip=true'
            }
        }

        stage('Build Docker Image') {
            steps {
                container('docker') {
                sh """
                    docker build -t docker.amoylabs.com:30500/blog/post-service:$BUILD_NUMBER -f .cicd/Dockerfile .
                """
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                container('docker') {
                    sh """
                        docker push docker.amoylabs.com:30500/blog/post-service:$BUILD_NUMBER
                    """
                }
            }
        }

        stage('Update config') {
            steps {
                container('git') {
                    withCredentials([sshUserPrivateKey(credentialsId: 'github_guuuuo', keyFileVariable: 'GITHUB_SSH_PRIVATE_KEY_FILE')]) {
                        sh """
                            mkdir ~/.ssh
                            cat ${GITHUB_SSH_PRIVATE_KEY_FILE} > ~/.ssh/id_ed25519
                            chmod 400 ~/.ssh/id_ed25519

                            export GIT_SSH_COMMAND="ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
                            git config --global user.email "1460412+guuuuo@users.noreply.github.com"
                            git config --global user.name "N_G"

                            git clone git@github.com:outstanding-blog/post-service-config.git
                            cd post-service-config/

                            echo "Current Version"
                            cat kustomize/deploy.yaml
                            sed -i 's+docker.amoylabs.com:30500/blog/post-service:.*+docker.amoylabs.com:30500/blog/post-service:${BUILD_NUMBER}+g' kustomize/deploy.yaml
                            echo "New Version"
                            cat kustomize/deploy.yaml

                            git add kustomize/deploy.yaml
                            git commit -m "feat: Upgrade version to ${BUILD_NUMBER}"
                            git push origin master
                        """
                    }
                }
            }
        }

    }

}
